{"displayName": "chicago-taxi-tips-classifier-train-pipeline", "labels": {"tfx_py_version": "3-7", "tfx_runner": "kubeflow_v2", "tfx_version": "1-2-0"}, "pipelineSpec": {"components": {"DataTransformer": {"executorLabel": "DataTransformer_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "disable_statistics": {"type": "INT"}, "force_tf_compat_v1": {"type": "INT"}, "module_file": {"type": "STRING"}, "splits_config": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"post_transform_anomalies": {"artifactType": {"instanceSchema": "title: tfx.ExampleAnomalies\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "post_transform_schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "post_transform_stats": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "pre_transform_schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "pre_transform_stats": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}, "transformed_examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "updated_analyzer_cache": {"artifactType": {"instanceSchema": "title: tfx.TransformCache\ntype: object\n"}}}}}, "ExampleValidator": {"executorLabel": "ExampleValidator_executor", "inputDefinitions": {"artifacts": {"schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "statistics": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}, "parameters": {"exclude_splits": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"anomalies": {"artifactType": {"instanceSchema": "title: tfx.ExampleAnomalies\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "HyperparamsGen": {"executorLabel": "HyperparamsGen_executor", "inputDefinitions": {"parameters": {"batch_size": {"type": "INT"}, "hidden_units": {"type": "STRING"}, "learning_rate": {"type": "DOUBLE"}, "num_epochs": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"hyperparameters": {"artifactType": {"instanceSchema": "title: tfx.HyperParameters\ntype: object\n"}}}}}, "ModelEvaluator": {"executorLabel": "ModelEvaluator_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}, "parameters": {"eval_config": {"type": "STRING"}, "example_splits": {"type": "STRING"}, "fairness_indicator_thresholds": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"blessing": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}, "evaluation": {"artifactType": {"instanceSchema": "title: tfx.ModelEvaluation\ntype: object\n"}}}}}, "ModelPusher": {"executorLabel": "ModelPusher_executor", "inputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "model_blessing": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "push_destination": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"pushed_model": {"artifactType": {"instanceSchema": "title: tfx.PushedModel\ntype: object\n"}}}}}, "ModelTrainer": {"executorLabel": "ModelTrainer_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "hyperparameters": {"artifactType": {"instanceSchema": "title: tfx.HyperParameters\ntype: object\n"}}, "schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "eval_args": {"type": "STRING"}, "module_file": {"type": "STRING"}, "train_args": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "model_run": {"artifactType": {"instanceSchema": "title: tfx.ModelRun\ntype: object\n"}}}}}, "SchemaImporter": {"executorLabel": "SchemaImporter_executor", "inputDefinitions": {"parameters": {"artifact_uri": {"type": "STRING"}, "reimport": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"result": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}}}, "StatisticsGen": {"executorLabel": "StatisticsGen_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}, "parameters": {"exclude_splits": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"statistics": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "TestDataGen": {"executorLabel": "TestDataGen_executor", "inputDefinitions": {"parameters": {"input_config": {"type": "STRING"}, "output_config": {"type": "STRING"}, "output_data_format": {"type": "INT"}, "output_file_format": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "TrainDataGen": {"executorLabel": "TrainDataGen_executor", "inputDefinitions": {"parameters": {"input_config": {"type": "STRING"}, "output_config": {"type": "STRING"}, "output_data_format": {"type": "INT"}, "output_file_format": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "VertexUploader": {"executorLabel": "VertexUploader_executor", "inputDefinitions": {"parameters": {"explanation_config": {"type": "STRING"}, "model_display_name": {"type": "STRING"}, "project": {"type": "STRING"}, "pushed_model_location": {"type": "STRING"}, "region": {"type": "STRING"}, "serving_image_uri": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"uploaded_model": {"artifactType": {"instanceSchema": "title: tfx.File\ntype: object\n"}}}}}}, "deploymentSpec": {"executors": {"DataTransformer_executor": {"container": {"args": ["--executor_class_path", "tfx.components.transform.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "ExampleValidator_executor": {"container": {"args": ["--executor_class_path", "tfx.components.example_validator.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "HyperparamsGen_executor": {"container": {"args": ["--executor_class_path", "src.tfx_pipelines.components.hyperparameters_gen_Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "ModelEvaluator_executor": {"container": {"args": ["--executor_class_path", "tfx.components.evaluator.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "ModelPusher_executor": {"container": {"args": ["--executor_class_path", "tfx.components.pusher.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "ModelTrainer_executor": {"container": {"args": ["--executor_class_path", "tfx.components.trainer.executor.GenericExecutor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "SchemaImporter_executor": {"importer": {"artifactUri": {"constantValue": {"stringValue": "src/raw_schema"}}, "typeSchema": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}, "StatisticsGen_executor": {"container": {"args": ["--executor_class_path", "tfx.components.statistics_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "TestDataGen_executor": {"container": {"args": ["--executor_class_path", "tfx.extensions.google_cloud_big_query.example_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "TrainDataGen_executor": {"container": {"args": ["--executor_class_path", "tfx.extensions.google_cloud_big_query.example_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}, "VertexUploader_executor": {"container": {"args": ["--executor_class_path", "src.tfx_pipelines.components.vertex_model_uploader_Executor", "--json_serialized_invocation_args", "{{$}}", "--project=aiops-industrialization", "--temp_location=gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/temp"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/aiops-industrialization/chicago-taxi-tips:latest"}}}}, "pipelineInfo": {"name": "chicago-taxi-tips-classifier-train-pipeline"}, "root": {"dag": {"tasks": {"DataTransformer": {"componentRef": {"name": "DataTransformer"}, "dependentTasks": ["ExampleValidator", "SchemaImporter", "TrainDataGen"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "TrainDataGen"}}, "schema": {"taskOutputArtifact": {"outputArtifactKey": "result", "producerTask": "SchemaImporter"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "disable_statistics": {"runtimeValue": {"constantValue": {"intValue": "0"}}}, "force_tf_compat_v1": {"runtimeValue": {"constantValue": {"intValue": "0"}}}, "module_file": {"runtimeValue": {"constantValue": {"stringValue": "src/preprocessing/transformations.py"}}}, "splits_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"analyze\": [\n    \"train\"\n  ],\n  \"transform\": [\n    \"train\",\n    \"eval\"\n  ]\n}"}}}}}, "taskInfo": {"name": "DataTransformer"}}, "ExampleValidator": {"componentRef": {"name": "ExampleValidator"}, "dependentTasks": ["SchemaImporter", "StatisticsGen"], "inputs": {"artifacts": {"schema": {"taskOutputArtifact": {"outputArtifactKey": "result", "producerTask": "SchemaImporter"}}, "statistics": {"taskOutputArtifact": {"outputArtifactKey": "statistics", "producerTask": "StatisticsGen"}}}, "parameters": {"exclude_splits": {"runtimeValue": {"constantValue": {"stringValue": "[]"}}}}}, "taskInfo": {"name": "ExampleValidator"}}, "HyperparamsGen": {"componentRef": {"name": "HyperparamsGen"}, "inputs": {"parameters": {"batch_size": {"componentInputParameter": "batch_size"}, "hidden_units": {"componentInputParameter": "hidden_units"}, "learning_rate": {"componentInputParameter": "learning_rate"}, "num_epochs": {"componentInputParameter": "num_epochs"}}}, "taskInfo": {"name": "HyperparamsGen"}}, "ModelEvaluator": {"componentRef": {"name": "ModelEvaluator"}, "dependentTasks": ["ModelTrainer", "SchemaImporter", "TestDataGen"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "TestDataGen"}}, "model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "ModelTrainer"}}, "schema": {"taskOutputArtifact": {"outputArtifactKey": "result", "producerTask": "SchemaImporter"}}}, "parameters": {"eval_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"metrics_specs\": [\n    {\n      \"metrics\": [\n        {\n          \"class_name\": \"ExampleCount\"\n        },\n        {\n          \"class_name\": \"BinaryAccuracy\",\n          \"threshold\": {\n            \"change_threshold\": {\n              \"absolute\": -1e-10,\n              \"direction\": \"HIGHER_IS_BETTER\"\n            },\n            \"value_threshold\": {\n              \"lower_bound\": 0.8\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"model_specs\": [\n    {\n      \"label_key\": \"tip_bin\",\n      \"prediction_key\": \"probabilities\",\n      \"signature_name\": \"serving_tf_example\"\n    }\n  ],\n  \"slicing_specs\": [\n    {}\n  ]\n}"}}}, "example_splits": {"runtimeValue": {"constantValue": {"stringValue": "[\"test\"]"}}}, "fairness_indicator_thresholds": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}}}, "taskInfo": {"name": "ModelEvaluator"}}, "ModelPusher": {"componentRef": {"name": "ModelPusher"}, "dependentTasks": ["ModelEvaluator", "ModelTrainer"], "inputs": {"artifacts": {"model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "ModelTrainer"}}, "model_blessing": {"taskOutputArtifact": {"outputArtifactKey": "blessing", "producerTask": "ModelEvaluator"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "push_destination": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"filesystem\": {\n    \"base_directory\": \"gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/model_registry/chicago-taxi-tips-classifier\"\n  }\n}"}}}}}, "taskInfo": {"name": "ModelPusher"}}, "ModelTrainer": {"componentRef": {"name": "ModelTrainer"}, "dependentTasks": ["DataTransformer", "HyperparamsGen", "SchemaImporter"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "transformed_examples", "producerTask": "DataTransformer"}}, "hyperparameters": {"taskOutputArtifact": {"outputArtifactKey": "hyperparameters", "producerTask": "HyperparamsGen"}}, "schema": {"taskOutputArtifact": {"outputArtifactKey": "result", "producerTask": "SchemaImporter"}}, "transform_graph": {"taskOutputArtifact": {"outputArtifactKey": "transform_graph", "producerTask": "DataTransformer"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "eval_args": {"runtimeValue": {"constantValue": {"stringValue": "{}"}}}, "module_file": {"runtimeValue": {"constantValue": {"stringValue": "src/model_training/runner.py"}}}, "train_args": {"runtimeValue": {"constantValue": {"stringValue": "{}"}}}}}, "taskInfo": {"name": "ModelTrainer"}}, "SchemaImporter": {"componentRef": {"name": "SchemaImporter"}, "inputs": {"parameters": {"artifact_uri": {"runtimeValue": {"constantValue": {"stringValue": "src/raw_schema"}}}, "reimport": {"runtimeValue": {"constantValue": {"intValue": "0"}}}}}, "taskInfo": {"name": "SchemaImporter"}}, "StatisticsGen": {"componentRef": {"name": "StatisticsGen"}, "dependentTasks": ["TrainDataGen"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "TrainDataGen"}}}, "parameters": {"exclude_splits": {"runtimeValue": {"constantValue": {"stringValue": "[]"}}}}}, "taskInfo": {"name": "StatisticsGen"}}, "TestDataGen": {"componentRef": {"name": "TestDataGen"}, "inputs": {"parameters": {"input_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"splits\": [\n    {\n      \"name\": \"single_split\",\n      \"pattern\": \"\\n    SELECT \\n        IF(trip_month IS NULL, -1, trip_month) trip_month,\\n        IF(trip_day IS NULL, -1, trip_day) trip_day,\\n        IF(trip_day_of_week IS NULL, -1, trip_day_of_week) trip_day_of_week,\\n        IF(trip_hour IS NULL, -1, trip_hour) trip_hour,\\n        IF(trip_seconds IS NULL, -1, trip_seconds) trip_seconds,\\n        IF(trip_miles IS NULL, -1, trip_miles) trip_miles,\\n        IF(payment_type IS NULL, 'NA', payment_type) payment_type,\\n        IF(pickup_grid IS NULL, 'NA', pickup_grid) pickup_grid,\\n        IF(dropoff_grid IS NULL, 'NA', dropoff_grid) dropoff_grid,\\n        IF(euclidean IS NULL, -1, euclidean) euclidean,\\n        IF(loc_cross IS NULL, 'NA', loc_cross) loc_cross,\\n        tip_bin\\n    FROM playground_us.chicago_taxitrips_prep \\n    WHERE ML_use = 'TEST'\\n    \"\n    }\n  ]\n}"}}}, "output_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"split_config\": {\n    \"splits\": [\n      {\n        \"hash_buckets\": 1,\n        \"name\": \"test\"\n      }\n    ]\n  }\n}"}}}, "output_data_format": {"runtimeValue": {"constantValue": {"intValue": "6"}}}, "output_file_format": {"runtimeValue": {"constantValue": {"intValue": "5"}}}}}, "taskInfo": {"name": "TestDataGen"}}, "TrainDataGen": {"componentRef": {"name": "TrainDataGen"}, "inputs": {"parameters": {"input_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"splits\": [\n    {\n      \"name\": \"single_split\",\n      \"pattern\": \"\\n    SELECT \\n        IF(trip_month IS NULL, -1, trip_month) trip_month,\\n        IF(trip_day IS NULL, -1, trip_day) trip_day,\\n        IF(trip_day_of_week IS NULL, -1, trip_day_of_week) trip_day_of_week,\\n        IF(trip_hour IS NULL, -1, trip_hour) trip_hour,\\n        IF(trip_seconds IS NULL, -1, trip_seconds) trip_seconds,\\n        IF(trip_miles IS NULL, -1, trip_miles) trip_miles,\\n        IF(payment_type IS NULL, 'NA', payment_type) payment_type,\\n        IF(pickup_grid IS NULL, 'NA', pickup_grid) pickup_grid,\\n        IF(dropoff_grid IS NULL, 'NA', dropoff_grid) dropoff_grid,\\n        IF(euclidean IS NULL, -1, euclidean) euclidean,\\n        IF(loc_cross IS NULL, 'NA', loc_cross) loc_cross,\\n        tip_bin\\n    FROM playground_us.chicago_taxitrips_prep \\n    WHERE ML_use = 'UNASSIGNED'\\n    \"\n    }\n  ]\n}"}}}, "output_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"split_config\": {\n    \"splits\": [\n      {\n        \"hash_buckets\": 4,\n        \"name\": \"train\"\n      },\n      {\n        \"hash_buckets\": 1,\n        \"name\": \"eval\"\n      }\n    ]\n  }\n}"}}}, "output_data_format": {"runtimeValue": {"constantValue": {"intValue": "6"}}}, "output_file_format": {"runtimeValue": {"constantValue": {"intValue": "5"}}}}}, "taskInfo": {"name": "TrainDataGen"}}, "VertexUploader": {"componentRef": {"name": "VertexUploader"}, "dependentTasks": ["ModelPusher"], "inputs": {"parameters": {"explanation_config": {"runtimeValue": {"constantValue": {"stringValue": "{\"inputs\": {\"trip_month\": {\"input_tensor_name\": \"trip_month\", \"modality\": \"categorical\"}, \"trip_day\": {\"input_tensor_name\": \"trip_day\", \"modality\": \"categorical\"}, \"trip_day_of_week\": {\"input_tensor_name\": \"trip_day_of_week\", \"modality\": \"categorical\"}, \"trip_hour\": {\"input_tensor_name\": \"trip_hour\", \"modality\": \"categorical\"}, \"trip_seconds\": {\"input_tensor_name\": \"trip_seconds\", \"modality\": \"numeric\"}, \"trip_miles\": {\"input_tensor_name\": \"trip_miles\", \"modality\": \"numeric\"}, \"payment_type\": {\"input_tensor_name\": \"payment_type\", \"modality\": \"categorical\"}, \"pickup_grid\": {\"input_tensor_name\": \"pickup_grid\", \"modality\": \"categorical\"}, \"dropoff_grid\": {\"input_tensor_name\": \"dropoff_grid\", \"modality\": \"categorical\"}, \"euclidean\": {\"input_tensor_name\": \"euclidean\", \"modality\": \"numeric\"}, \"loc_cross\": {\"input_tensor_name\": \"loc_cross\", \"modality\": \"categorical\"}}, \"outputs\": {\"scores\": {\"output_tensor_name\": \"scores\"}}, \"params\": {\"sampled_shapley_attribution\": {\"path_count\": 10}}}"}}}, "model_display_name": {"runtimeValue": {"constantValue": {"stringValue": "chicago-taxi-tips-classifier"}}}, "project": {"runtimeValue": {"constantValue": {"stringValue": "aiops-industrialization"}}}, "pushed_model_location": {"runtimeValue": {"constantValue": {"stringValue": "gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/model_registry/chicago-taxi-tips-classifier"}}}, "region": {"runtimeValue": {"constantValue": {"stringValue": "us-central1"}}}, "serving_image_uri": {"runtimeValue": {"constantValue": {"stringValue": "gcr.io/cloud-aiplatform/prediction/tf2-cpu.2-4:latest"}}}}}, "taskInfo": {"name": "VertexUploader"}}}}, "inputDefinitions": {"parameters": {"batch_size": {"type": "INT"}, "hidden_units": {"type": "STRING"}, "learning_rate": {"type": "DOUBLE"}, "num_epochs": {"type": "INT"}}}}, "schemaVersion": "2.0.0", "sdkVersion": "tfx-1.2.0"}, "runtimeConfig": {"gcsOutputDirectory": "gs://aiops-industrialization-bucket-ravi/chicago-taxi-tips/tfx_artifacts/chicago-taxi-tips-classifier-train-pipeline"}}
